#! /usr/bin/toka
#! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#! This is a Toka script to export the contents of a block file
#! as plain ASCII text.
#! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#! Requires:
#!  - Toka
#!  - Block file ("blocks"), in the proper format
#! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#! This code was written by Charles Childers for use with Retro
#! It is gifted to the public domain. In the event that your
#! country does not allow a direct dedication to the public
#! domain, the author voluntarily gives up all rights to the
#! extent permitted by law.
#! ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

include image-lib.toka

value| BUFFER INDEX |

[ ( $ -- )
  ( Write a string to the output file )
  >r OUTPUT r> string.getLength file.write drop ] is x

[ ( -- )
  ( Display a separator in the block file )
  64 [ " -" x ] iterate " \n" x ] is ---

[ ( -- )
  ( Advance to the next line in the block file )
  INDEX 64 + to INDEX ] is next

[ ( -- )
  ( Dump a line from the block file into the output file )
  ( We can't use 'x' here since the strings aren't delimited by 0)
  OUTPUT INDEX 64 file.write drop " \n" x ] is dump-line

[ ( -- )
  ( Setup the buffers we'll be using )
  BLOCKS char-size * 1 + malloc keep to BUFFER
  BUFFER to INDEX ] is prepare

[ ( -- )
  ( Convert the input array to ASCII text )
  BLOCKS [ INPUT i cell-size * + @ BUFFER i char-size * + c! ] iterate ] is convert

[ ( -- )
  ( Close the output file )
  OUTPUT file.close ] is finish

[ ( -- )
  ( Display a header for each block )
  " Block: " x i >string x " \n" x --- ] is header

[ ( -- )
  ( Cycle through the blocks, dumping them as ASCII to the output file )
  1024 [ header 8 [ dump-line next ] iterate --- ] iterate ] is dump


( The main sequence. This is pretty easy now. )
input: blocks
output: blocks.txt
prepare convert dump finish
bye
